name: CI â€” Build & Push Images + Frontend Deploy

on:
  push:
    branches:
      - 'feature/*'
      - staging
      - main

permissions:
  contents: read

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPO: ${{ secrets.ECR_REPOSITORY }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image tags
        id: tags
        run: |
          BRANCH_NAME=${GITHUB_REF##*/}
          SHORT_SHA=${GITHUB_SHA::8}
          if [[ "$BRANCH_NAME" == "main" ]]; then
            BR_TAG="prod-latest"
          elif [[ "$BRANCH_NAME" == "staging" ]]; then
            BR_TAG="staging-latest"
          else
            SAFE_BRANCH=$(echo "$BRANCH_NAME" | tr '/' '-' | tr '[:upper:]' '[:lower:]')
            BR_TAG="feature-${SAFE_BRANCH}-latest"
          fi
          IMAGE_SHA_TAG="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${GITHUB_SHA}"
          IMAGE_BRANCH_TAG="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${BR_TAG}"
          echo "IMAGE_SHA_TAG=$IMAGE_SHA_TAG" >> $GITHUB_OUTPUT
          echo "IMAGE_BRANCH_TAG=$IMAGE_BRANCH_TAG" >> $GITHUB_OUTPUT

      - name: Build backend Docker image
        working-directory: ./server
        run: |
          docker build -t ${{ steps.tags.outputs.IMAGE_SHA_TAG }} -t ${{ steps.tags.outputs.IMAGE_BRANCH_TAG }} .

      - name: Push backend image to ECR
        run: |
          docker push ${{ steps.tags.outputs.IMAGE_SHA_TAG }}
          docker push ${{ steps.tags.outputs.IMAGE_BRANCH_TAG }}

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-and-push-backend
    if: ${{ github.event_name == 'push' }}
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install dependencies and build React app
        working-directory: ./client
        run: |
          npm ci
          npm run build

      - name: Deploy to S3
        run: |
          aws s3 sync ./client/dist s3://${S3_BUCKET_NAME} 

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
